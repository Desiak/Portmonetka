{"version":3,"sources":["components/Income.js","components/Expenses.js","components/Balance.js","App.js","index.js"],"names":["Income","props","totalValue","useSpring","to","number","income","from","incomeList","incArray","map","item","index","key","className","date","onClick","remove","title","value","StylesProvider","injectFirst","header","total","span","interpolate","toFixed","toString","replace","TextField","error","errTxt","type","incomeTitle","name","onChange","event","handleTitleChange","label","txtInput","helperText","helperTxt","errNum","incomeValue","handleValueChange","numInput","helperNum","Button","variant","color","handleAddToList","buttonTxt","style","maxHeight","autoHide","reverse","Expenses","expenses","expensesList","removeElement","changeTitle","id","changeValue","addElement","Balance","balance","useState","flipped","set","opacity","transform","state","switchLang","p","o","t","App","Date","toLocaleDateString","langPL","lang","totalIncome","totalExpenses","textInput","numberInput","incomeTotal","expensesTotal","incomeName","expenseName","valueInc","valueExp","errorET","errorEV","errorIT","errorIV","e","setState","target","valueAsNumber","handleIncomeButtonClick","length","resetErrors","Math","round","setTimeout","handleExpensesButtonClick","selector","items","filter","onSwitchLanguage","document","querySelector","classList","add","this","forEach","element","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a08cea22.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { StylesProvider, Button } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SimpleBarReact from \"simplebar-react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst Income = (props) => {\r\n  const totalValue = useSpring({\r\n    to: { number: props.income },\r\n    from: { number: 0 },\r\n  });\r\n  const list = \"income\";\r\n\r\n  //create new item\r\n  const incomeList = props.incArray.map((item, index) => {\r\n    return (\r\n      <li key={index} className=\"list-element\">\r\n        <p className=\"list-element__date\">{item.date}</p>\r\n        <DeleteIcon\r\n          className=\"list-element__bin\"\r\n          onClick={() => props.remove(list, item.key)}\r\n        ></DeleteIcon>{\" \"}\r\n        <h4 className=\"list-element__title\">{item.title}</h4>\r\n        <p className=\"list-element__value\">{item.value} z≈Ç</p>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <div className=\"income\">\r\n        <div className=\"income__wrapper\">\r\n          <h1 className=\"income__styledHeader\">{props.header}</h1>\r\n          <p className=\"income__summedValue\">\r\n            {props.total}\r\n            <animated.span>\r\n              {totalValue.number.interpolate((number) =>\r\n                number\r\n                  .toFixed(2)\r\n                  .toString()\r\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n              )}\r\n            </animated.span>{\" \"}\r\n            z≈Ç\r\n          </p>\r\n\r\n          <div className=\"income__container\">\r\n            <TextField\r\n              error={props.errTxt}\r\n              className=\"income__textfield\"\r\n              type=\"text\"\r\n              value={props.incomeTitle}\r\n              name=\"incomeName\"\r\n              onChange={(event) => props.handleTitleChange(event)}\r\n              label={props.txtInput}\r\n              helperText={props.helperTxt}\r\n            ></TextField>\r\n\r\n            <TextField\r\n              error={props.errNum}\r\n              className=\"income__number\"\r\n              type=\"number\"\r\n              value={props.incomeValue}\r\n              name=\"valueInc\"\r\n              onChange={(event) => props.handleValueChange(event)}\r\n              label={props.numInput}\r\n              helperText={props.helperNum}\r\n            />\r\n\r\n            <br></br>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"button\"\r\n              onClick={() => props.handleAddToList(list)}\r\n            >\r\n              {props.buttonTxt}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"list\">\r\n          <SimpleBarReact style={{ maxHeight: 300 }} autoHide=\"false\">\r\n            {incomeList.reverse()}\r\n          </SimpleBarReact>\r\n        </div>\r\n      </div>\r\n    </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default Income;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { StylesProvider } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SimpleBarReact from \"simplebar-react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst Expenses = (props) => {\r\n  const totalValue = useSpring({\r\n    to: { number: props.expenses },\r\n    from: { number: 0 },\r\n  });\r\n\r\n  //create new item\r\n  const listSelector = \"expenses\";\r\n  const expensesList = props.expensesList.map((item, index) => {\r\n    return (\r\n      <li key={index} className=\"list-element\">\r\n        <p className=\"list-element__date\">{item.date}</p>\r\n        <DeleteIcon\r\n          className=\"list-element__bin\"\r\n          onClick={() => props.removeElement(listSelector, item.key)}\r\n        ></DeleteIcon>\r\n\r\n        <p className=\"list-element__title\">{item.title}</p>\r\n        <p className=\"list-element__value\">{item.value} z≈Ç</p>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <div className=\"expenses\">\r\n        <div className=\"expenses__wrapper\">\r\n          <h1 className=\"expenses__styledHeader\">{props.header}</h1>\r\n          <p className=\"income__summedValue\">\r\n            {props.total}\r\n            <animated.span>\r\n              {totalValue.number.interpolate((number) =>\r\n                number\r\n                  .toFixed(2)\r\n                  .toString()\r\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n              )}\r\n            </animated.span>{\" \"}\r\n            z≈Ç\r\n          </p>\r\n          <div className=\"expenses__container\">\r\n            <TextField\r\n              error={props.errTxt}\r\n              className=\"expenses__textfield\"\r\n              type=\"text\"\r\n              name=\"expenseName\"\r\n              value={props.title}\r\n              onChange={(event, error) => props.changeTitle(event, error)}\r\n              id=\"standard-basic\"\r\n              label={props.txtInput}\r\n              helperText={props.helperTxt}\r\n            />\r\n\r\n            <TextField\r\n              error={props.errNum}\r\n              className=\"expenses__number\"\r\n              type=\"number\"\r\n              value={props.value}\r\n              name=\"valueExp\"\r\n              onChange={(event) => props.changeValue(event)}\r\n              id=\"standard-basic\"\r\n              label={props.numInput}\r\n              helperText={props.helperNum}\r\n            />\r\n            <br></br>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"button\"\r\n              onClick={() => props.addElement()}\r\n            >\r\n              {props.buttonTxt}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"list\">\r\n          <SimpleBarReact style={{ maxHeight: 300 }} autoHide=\"false\">\r\n            {expensesList.reverse()}\r\n          </SimpleBarReact>\r\n        </div>\r\n      </div>\r\n    </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst Balance = (props) => {\r\n  const balance = useSpring({\r\n    from: { number: 0 },\r\n    to: { number: props.income - props.expenses },\r\n  });\r\n  const [flipped, set] = useState(false);\r\n  const { transform, opacity } = useSpring({\r\n    opacity: flipped ? 1 : 0,\r\n    transform: `rotateX(${flipped ? 180 : 0}deg)`,\r\n  });\r\n\r\n  return (\r\n    <div className=\"infoArea\">\r\n      <div\r\n        className=\"switcher\"\r\n        onClick={() => {\r\n          set((state) => !state);\r\n          props.switchLang();\r\n        }}\r\n      >\r\n        <animated.p\r\n          className=\"switch back\"\r\n          style={{ opacity: opacity.interpolate((o) => 1 - o), transform }}\r\n        >\r\n          ENG\r\n        </animated.p>\r\n        <animated.p\r\n          className=\"switch front\"\r\n          style={{\r\n            opacity,\r\n            transform: transform.interpolate((t) => `${t} rotateX(180deg)`),\r\n          }}\r\n        >\r\n          PL\r\n        </animated.p>\r\n      </div>\r\n      <h1 className=\"infoArea__balance\">\r\n        {props.header}\r\n        <animated.span>\r\n          {balance.number.interpolate((number) =>\r\n            number\r\n              .toFixed(2)\r\n              .toString()\r\n              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n          )}\r\n        </animated.span>{\" \"}\r\n        z≈Ç\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React from \"react\";\nimport \"./css/style.css\";\nimport Income from \"./components/Income\";\nimport Expenses from \"./components/Expenses\";\nimport Balance from \"./components/Balance\";\n\nclass App extends React.Component {\n  date = new Date().toLocaleDateString();\n  state = {\n    langPL: true,\n    lang: {\n      header: \"Stan konta: \",\n      income: \"Przych√≥d\",\n      expenses: \"Wydatki\",\n      totalIncome: \"Suma przychodu: \",\n      totalExpenses: \"Suma wydatk√≥w: \",\n      textInput: \"Wpisz tytu≈Ç\",\n      numberInput: \"Podaj kwotƒô\",\n      buttonTxt: \"Dodaj\",\n      helperTxt: \"Od 3 do 20 znak√≥w\",\n      helperNum: \"Warto≈õƒá minimalna to 1z≈Ç\",\n    },\n\n    income: [],\n    expenses: [],\n    incomeTotal: 0,\n    expensesTotal: 0,\n    incomeName: \"\",\n    expenseName: \"\",\n    valueInc: \"\",\n    valueExp: \"\",\n    date: this.date,\n    key: 0,\n    errorET: false,\n    errorEV: false,\n    errorIT: false,\n    errorIV: false,\n  };\n  //handle input name change\n  handleTitleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //handle input number change\n  handleValueChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.valueAsNumber || e.target.value, //   The || e.target.value is a fallback in case the valueAsNumber is NaN.\n    });\n  };\n\n  //handle click event of input button\n  handleIncomeButtonClick = (e) => {\n    //check if input names length is between 3-20\n    if (this.state.incomeName.length < 3 || this.state.incomeName.length > 21) {\n      this.setState({\n        errorIT: true,\n      });\n      this.resetErrors();\n    }\n\n    //check if number input is at least 1(z≈Ç)\n    else if (this.state.valueInc < 1) {\n      this.setState({\n        errorIV: true,\n      });\n      this.resetErrors();\n    }\n\n    //if above requirements are passed:\n    else {\n      const item = {\n        title: this.state.incomeName,\n        value: Math.round(this.state.valueInc * 100) / 100,\n        date: this.state.date,\n        key: this.state.key,\n      };\n\n      this.setState({\n        [e]: [...this.state.income, item],\n        incomeName: \"\",\n        valueInc: \"\",\n        key: this.state.key + 1,\n        errorIT: false,\n        errorIV: false,\n      });\n    }\n  };\n  resetErrors = () => {\n    setTimeout(() => {\n      this.setState({\n        errorET: false,\n        errorEV: false,\n        errorIT: false,\n        errorIV: false,\n      });\n    }, 2000);\n  };\n\n  //handle click event of expenses button\n\n  handleExpensesButtonClick = () => {\n    if (\n      this.state.expenseName.length < 3 ||\n      this.state.expenseName.length > 21\n    ) {\n      this.setState({\n        errorET: true,\n      });\n      this.resetErrors();\n    } else if (this.state.valueExp < 1) {\n      this.setState({\n        errorEV: true,\n      });\n      this.resetErrors();\n    } else {\n      const item = {\n        title: this.state.expenseName,\n        value: Math.round(this.state.valueExp * 100) / 100,\n        date: this.state.date,\n        key: this.state.key,\n      };\n\n      this.setState({\n        expenses: [...this.state.expenses, item],\n        expenseName: \"\",\n        valueExp: \"\",\n        key: this.state.key + 1,\n        errorET: false,\n        errorEV: false,\n      });\n    }\n  };\n\n  // remove item from the list\n  removeElement = (selector, key) => {\n    let items = this.state[selector].filter((item) => item.key !== key);\n    this.setState({\n      [selector]: items,\n    });\n  };\n  // switch language Eng/PL\n  onSwitchLanguage = () => {\n    //selectors\n    const balance = document.querySelector(\".infoArea__balance\");\n    const expenses = document.querySelector(\".expenses__wrapper\");\n    const income = document.querySelector(\".income__wrapper\");\n\n    //transition\n    balance.classList.add(\"transition\");\n    expenses.classList.add(\"transition\");\n    income.classList.add(\"transition\");\n\n    setTimeout(() => {\n      this.setState({\n        langPL: !this.state.langPL,\n      });\n\n      if (this.state.langPL) {\n        this.setState({\n          lang: {\n            header: \"Stan konta: \",\n            income: \"Przych√≥d\",\n            expenses: \"Wydatki\",\n            totalIncome: \"Suma przychodu: \",\n            totalExpenses: \"Suma wydatk√≥w: \",\n            textInput: \"Wpisz tytu≈Ç\",\n            numberInput: \"Podaj kwotƒô\",\n            buttonTxt: \"Dodaj\",\n            helperTxt: \"Od 3 do 20 znak√≥w\",\n            helperNum: \"Warto≈õƒá minimalna to 1z≈Ç\",\n          },\n        });\n      } else {\n        this.setState({\n          lang: {\n            header: \"Balance: \",\n            income: \"Income\",\n            expenses: \"Expenses\",\n            totalIncome: \"Total income: \",\n            totalExpenses: \"Total expenses: \",\n            textInput: \"Enter title\",\n            numberInput: \"Enter value\",\n            buttonTxt: \"Add\",\n            helperTxt: \"Between 3 to 20 characters\",\n            helperNum: \"At least 1z≈Ç\",\n          },\n        });\n      }\n    }, 500);\n\n    //removing transition class so it can be added back on next click\n    setTimeout(() => {\n      balance.classList.remove(\"transition\");\n      expenses.classList.remove(\"transition\");\n      income.classList.remove(\"transition\");\n    }, 1000);\n  };\n\n  render() {\n    let income = 0;\n    let expenses = 0;\n    this.state.income.forEach((element) => {\n      income = income + element.value;\n    });\n    this.state.expenses.forEach((element) => {\n      expenses = expenses + element.value;\n    });\n    return (\n      <div className=\"main\">\n        <Balance\n          income={income}\n          expenses={expenses}\n          header={this.state.lang.header}\n          switchLang={this.onSwitchLanguage}\n          lang={this.state.langPL}\n        ></Balance>\n        <div className=\"container\">\n          <Income\n            header={this.state.lang.income}\n            total={this.state.lang.totalIncome}\n            txtInput={this.state.lang.textInput}\n            numInput={this.state.lang.numberInput}\n            buttonTxt={this.state.lang.buttonTxt}\n            incArray={this.state.income}\n            remove={this.removeElement}\n            incomeTitle={this.state.incomeName}\n            handleTitleChange={this.handleTitleChange}\n            incomeValue={this.state.valueInc}\n            handleValueChange={this.handleValueChange}\n            handleAddToList={this.handleIncomeButtonClick}\n            id={this.state.id}\n            income={income}\n            errNum={this.state.errorIV}\n            errTxt={this.state.errorIT}\n            helperTxt={this.state.lang.helperTxt}\n            helperNum={this.state.lang.helperNum}\n          />\n          <Expenses\n            header={this.state.lang.expenses}\n            total={this.state.lang.totalExpenses}\n            txtInput={this.state.lang.textInput}\n            numInput={this.state.lang.numberInput}\n            buttonTxt={this.state.lang.buttonTxt}\n            expensesList={this.state.expenses}\n            removeElement={this.removeElement}\n            title={this.state.expenseName}\n            changeTitle={this.handleTitleChange}\n            value={this.state.valueExp}\n            changeValue={this.handleValueChange}\n            addElement={this.handleExpensesButtonClick}\n            id={this.state.id}\n            expenses={expenses}\n            errNum={this.state.errorEV}\n            errTxt={this.state.errorET}\n            helperTxt={this.state.lang.helperTxt}\n            helperNum={this.state.lang.helperNum}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}