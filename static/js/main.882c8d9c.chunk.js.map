{"version":3,"sources":["components/Income.js","components/Expenses.js","components/Balance.js","App.js","index.js"],"names":["Income","props","totalValue","useSpring","to","number","income","from","incomeList","incArray","map","item","index","key","className","date","onClick","remove","title","value","StylesProvider","injectFirst","header","total","span","interpolate","toFixed","toString","replace","TextField","error","errTxt","type","incomeTitle","name","onChange","event","handleTitleChange","id","label","txtInput","helperText","helperTxt","errNum","incomeValue","handleValueChange","numInput","helperNum","Button","variant","color","handleAddToList","buttonTxt","style","maxHeight","data-simplebar-auto-hide","reverse","Expenses","expenses","expensesList","removeElement","changeTitle","changeValue","addElement","Balance","balance","useState","flipped","set","opacity","transform","config","mass","tension","friction","state","switchLang","p","class","o","t","App","Date","toLocaleDateString","langPL","lang","totalIncome","totalExpenses","textInput","numberInput","incomeTotal","expensesTotal","incomeName","expenseName","valueInc","valueExp","errorET","errorEV","errorIT","errorIV","e","setState","target","valueAsNumber","handleIncomeButtonClick","length","resetErrors","Math","round","setTimeout","handleExpensesButtonClick","items","filter","onSwitchLanguage","this","forEach","element","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.882c8d9c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { StylesProvider, Button } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SimpleBarReact from \"simplebar-react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst Income = props => {\r\n  const totalValue = useSpring({\r\n    to: { number: props.income },\r\n    from: { number: 0 }\r\n  });\r\n  const list = \"income\";\r\n  const incomeList = props.incArray.map((item, index) => {\r\n    return (\r\n      <li key={index} className=\"list-element\">\r\n        <p className=\"list-element__date\">{item.date}</p>\r\n        <DeleteIcon\r\n          className=\"list-element__bin\"\r\n          onClick={() => props.remove(list, item.key)}\r\n        ></DeleteIcon>{\" \"}\r\n        <h4 className=\"list-element__title\">{item.title}</h4>\r\n        <p className=\"list-element__value\">{item.value} zł</p>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <div className=\"income\">\r\n        <h1 className=\"income__styledHeader\">{props.header}</h1>\r\n        <p className=\"income__summedValue\">\r\n          {props.total}\r\n          <animated.span>\r\n            {totalValue.number.interpolate(number =>\r\n              number\r\n                .toFixed(2)\r\n                .toString()\r\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n            )}\r\n          </animated.span>{\" \"}\r\n          zł\r\n        </p>\r\n\r\n        <div className=\"income__container\">\r\n          <TextField\r\n            error={props.errTxt}\r\n            className=\"income__textfield\"\r\n            type=\"text\"\r\n            value={props.incomeTitle}\r\n            name=\"incomeName\"\r\n            onChange={event => props.handleTitleChange(event)}\r\n            id=\"standard-basic\"\r\n            label={props.txtInput}\r\n            helperText={props.helperTxt}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            error={props.errNum}\r\n            className=\"income__number\"\r\n            type=\"number\"\r\n            value={props.incomeValue}\r\n            name=\"valueInc\"\r\n            onChange={event => props.handleValueChange(event)}\r\n            id=\"standard-basic\"\r\n            label={props.numInput}\r\n            helperText={props.helperNum}\r\n          />\r\n\r\n          <br></br>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"button\"\r\n            onClick={() => props.handleAddToList(list)}\r\n          >\r\n            {props.buttonTxt}\r\n          </Button>\r\n\r\n          <div className=\"list\">\r\n            <SimpleBarReact\r\n              style={{ maxHeight: 300 }}\r\n              data-simplebar-auto-hide=\"false\"\r\n            >\r\n              {incomeList.reverse()}\r\n            </SimpleBarReact>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default Income;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { StylesProvider } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SimpleBarReact from \"simplebar-react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst Expenses = props => {\r\n  const totalValue = useSpring({\r\n    to: { number: props.expenses },\r\n    from: { number: 0 }\r\n  });\r\n  const listSelector = \"expenses\";\r\n  const expensesList = props.expensesList.map((item, index) => {\r\n    return (\r\n      <li key={index} className=\"list-element\">\r\n        <p className=\"list-element__date\">{item.date}</p>\r\n        <DeleteIcon\r\n          className=\"list-element__bin\"\r\n          onClick={() => props.removeElement(listSelector, item.key)}\r\n        ></DeleteIcon>\r\n        <p className=\"list-element__title\">{item.title}</p>\r\n        <p className=\"list-element__value\">{item.value} zł</p>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <div className=\"expenses\">\r\n        <h1 className=\"expenses__styledHeader\">{props.header}</h1>\r\n        <p className=\"income__summedValue\">\r\n          {props.total}\r\n          <animated.span>\r\n            {totalValue.number.interpolate(number =>\r\n              number\r\n                .toFixed(2)\r\n                .toString()\r\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n            )}\r\n          </animated.span>{\" \"}\r\n          zł\r\n        </p>\r\n        <div className=\"expenses__container\">\r\n          <TextField\r\n            error={props.errTxt}\r\n            className=\"expenses__textfield\"\r\n            type=\"text\"\r\n            name=\"expenseName\"\r\n            value={props.title}\r\n            onChange={(event, error) => props.changeTitle(event, error)}\r\n            id=\"standard-basic\"\r\n            label={props.txtInput}\r\n            helperText={props.helperTxt}\r\n          />\r\n\r\n          <TextField\r\n            error={props.errNum}\r\n            className=\"expenses__number\"\r\n            type=\"number\"\r\n            value={props.value}\r\n            name=\"valueExp\"\r\n            onChange={event => props.changeValue(event)}\r\n            id=\"standard-basic\"\r\n            label={props.numInput}\r\n            helperText={props.helperNum}\r\n          />\r\n          <br></br>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"button\"\r\n            onClick={() => props.addElement()}\r\n          >\r\n            {props.buttonTxt}\r\n          </Button>\r\n          <div className=\"list\">\r\n            <SimpleBarReact\r\n              style={{ maxHeight: 300 }}\r\n              data-simplebar-auto-hide=\"false\"\r\n            >\r\n              {expensesList.reverse()}\r\n            </SimpleBarReact>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst Balance = props => {\r\n  const balance = useSpring({\r\n    from: { number: 0 },\r\n    to: { number: props.income - props.expenses }\r\n  });\r\n\r\n  const [flipped, set] = useState(false);\r\n  const { transform, opacity } = useSpring({\r\n    opacity: flipped ? 1 : 0,\r\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n    config: { mass: 5, tension: 500, friction: 80 }\r\n  });\r\n\r\n  return (\r\n    <div className=\"infoArea\">\r\n      <div\r\n        onClick={() => {\r\n          set(state => !state);\r\n          props.switchLang();\r\n        }}\r\n      >\r\n        <animated.p\r\n          class=\"c back\"\r\n          style={{ opacity: opacity.interpolate(o => 1 - o), transform }}\r\n        >\r\n          ENG\r\n        </animated.p>\r\n        <animated.p\r\n          class=\"c front\"\r\n          style={{\r\n            opacity,\r\n            transform: transform.interpolate(t => `${t} rotateX(180deg)`)\r\n          }}\r\n        >\r\n          PL\r\n        </animated.p>\r\n      </div>\r\n      <h1 className=\"infoArea__balance\">\r\n        {props.header}\r\n        <animated.span>\r\n          {balance.number.interpolate(number =>\r\n            number\r\n              .toFixed(2)\r\n              .toString()\r\n              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n          )}\r\n        </animated.span>{\" \"}\r\n        zł\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React from \"react\";\nimport \"./css/style.css\";\nimport Income from \"./components/Income\";\nimport Expenses from \"./components/Expenses\";\nimport Balance from \"./components/Balance\";\n\nclass App extends React.Component {\n  date = new Date().toLocaleDateString();\n  state = {\n    langPL: false,\n    lang: {\n      header: \"Stan konta: \",\n      income: \"Przychód\",\n      expenses: \"Wydatki\",\n      totalIncome: \"Suma przychodu: \",\n      totalExpenses: \"Suma wydatków: \",\n      textInput: \"Wpisz tytuł\",\n      numberInput: \"Podaj kwotę\",\n      buttonTxt: \"Dodaj\",\n      helperTxt: \"Od 3 do 20 znaków\",\n      helperNum: \"Wartość minimalna to 1zł\"\n    },\n\n    income: [],\n    expenses: [],\n    incomeTotal: 0,\n    expensesTotal: 0,\n    incomeName: \"\",\n    expenseName: \"\",\n    valueInc: \"\",\n    valueExp: \"\",\n    date: this.date,\n    key: 0,\n    errorET: false,\n    errorEV: false,\n    errorIT: false,\n    errorIV: false\n  };\n\n  handleTitleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleValueChange = e => {\n    this.setState({\n      [e.target.name]: e.target.valueAsNumber || e.target.value //   The || e.target.value is a fallback in case the valueAsNumber is NaN.\n    });\n  };\n\n  handleIncomeButtonClick = e => {\n    if (this.state.incomeName.length < 3) {\n      this.setState({\n        errorIT: true\n      });\n      this.resetErrors();\n    }\n    if (this.state.valueInc <= 1) {\n      this.setState({\n        errorIV: true\n      });\n      this.resetErrors();\n    } else {\n      const item = {\n        title: this.state.incomeName,\n        value: Math.round(this.state.valueInc * 100) / 100,\n        date: this.state.date,\n        key: this.state.key\n      };\n\n      this.setState({\n        [e]: [...this.state.income, item],\n        incomeName: \"\",\n        valueInc: \"\",\n        key: this.state.key + 1,\n        errorIT: false,\n        errorIV: false\n      });\n    }\n  };\n  resetErrors = () => {\n    setTimeout(() => {\n      this.setState({\n        errorET: false,\n        errorEV: false,\n        errorIT: false,\n        errorIV: false\n      });\n    }, 2000);\n  };\n  handleExpensesButtonClick = () => {\n    if (this.state.expenseName.length < 3) {\n      this.setState({\n        errorET: true\n      });\n      this.resetErrors();\n    }\n    if (this.state.valueExp < 1) {\n      this.setState({\n        errorEV: true\n      });\n      this.resetErrors();\n    } else {\n      const item = {\n        title: this.state.expenseName,\n        value: Math.round(this.state.valueExp * 100) / 100,\n        date: this.state.date,\n        key: this.state.key\n      };\n\n      this.setState({\n        expenses: [...this.state.expenses, item],\n        expenseName: \"\",\n        valueExp: \"\",\n        key: this.state.key + 1,\n        errorET: false,\n        errorEV: false\n      });\n    }\n  };\n  removeElement = (e, key) => {\n    let items = this.state[e].filter(item => item.key !== key);\n    this.setState({\n      [e]: items\n    });\n  };\n\n  onSwitchLanguage = () => {\n    this.setState({\n      langPL: !this.state.langPL\n    });\n    if (this.state.langPL) {\n      this.setState({\n        lang: {\n          header: \"Stan konta: \",\n          income: \"Przychód\",\n          expenses: \"Wydatki\",\n          totalIncome: \"Suma przychodu: \",\n          totalExpenses: \"Suma wydatków: \",\n          textInput: \"Wpisz tytuł\",\n          numberInput: \"Podaj kwotę\",\n          buttonTxt: \"Dodaj\",\n          helperTxt: \"Od 3 do 20 znaków\",\n          helperNum: \"Wartość minimalna to 1zł\"\n        }\n      });\n    } else {\n      this.setState({\n        lang: {\n          header: \"Balance: \",\n          income: \"Income\",\n          expenses: \"Expenses\",\n          totalIncome: \"Total income: \",\n          totalExpenses: \"Total expenses: \",\n          textInput: \"Enter title\",\n          numberInput: \"Enter value\",\n          buttonTxt: \"Add\",\n          helperTxt: \"Between 3 to 20 characters\",\n          helperNum: \"At least 1zł\"\n        }\n      });\n    }\n  };\n\n  render() {\n    let income = 0;\n    let expenses = 0;\n    this.state.income.forEach(element => {\n      income = income + element.value;\n    });\n    this.state.expenses.forEach(element => {\n      expenses = expenses + element.value;\n    });\n    return (\n      <div className=\"main\">\n        <Balance\n          income={income}\n          expenses={expenses}\n          header={this.state.lang.header}\n          switchLang={this.onSwitchLanguage}\n        ></Balance>\n        <div className=\"container\">\n          <Income\n            header={this.state.lang.income}\n            total={this.state.lang.totalIncome}\n            txtInput={this.state.lang.textInput}\n            numInput={this.state.lang.numberInput}\n            buttonTxt={this.state.lang.buttonTxt}\n            incArray={this.state.income}\n            remove={this.removeElement}\n            incomeTitle={this.state.incomeName}\n            handleTitleChange={this.handleTitleChange}\n            incomeValue={this.state.valueInc}\n            handleValueChange={this.handleValueChange}\n            handleAddToList={this.handleIncomeButtonClick}\n            id={this.state.id}\n            income={income}\n            errNum={this.state.errorIV}\n            errTxt={this.state.errorIT}\n            helperTxt={this.state.lang.helperTxt}\n            helperNum={this.state.lang.helperNum}\n          />\n          <Expenses\n            header={this.state.lang.expenses}\n            total={this.state.lang.totalExpenses}\n            txtInput={this.state.lang.textInput}\n            numInput={this.state.lang.numberInput}\n            buttonTxt={this.state.lang.buttonTxt}\n            expensesList={this.state.expenses}\n            removeElement={this.removeElement}\n            title={this.state.expenseName}\n            changeTitle={this.handleTitleChange}\n            value={this.state.valueExp}\n            changeValue={this.handleValueChange}\n            addElement={this.handleExpensesButtonClick}\n            id={this.state.id}\n            expenses={expenses}\n            errNum={this.state.errorEV}\n            errTxt={this.state.errorET}\n            helperTxt={this.state.lang.helperTxt}\n            helperNum={this.state.lang.helperNum}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}